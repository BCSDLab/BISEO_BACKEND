# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
    
env:
  S3_BUCKET_NAME: biseo-test
  CODE_DEPLOY_APP_NAME: biseo-code-deploy
  CODE_DEPLOY_GROUP_NAME: biseo-code-deploy-group

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'
        
    - name: add Application.properties
      run:
        touch ./src/main/resources/application.properties
      shell: bash
      
    - name: add Application.properties1
      run:
        echo "${{ secrets.PROPERTIES }}" > ./src/main/resources/application.properties
      shell: bash
        
    - name: Grand execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash
      
    - name: Build with Gradle
      run: ./gradlew build
      shell: bash

    - name: move build files
      run: mv ./build/libs/ROOT.war ./
      shell: bash

    - name: zip build files
      run: zip -r $GITHUB_SHA.zip ./appspec.yml ./ROOT.war ./scripts

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.S3_UPLOAD_ID }}
        aws-secret-access-key: ${{ secrets.S3_UPLOAD_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

    - name: deploy
      run: |
        aws deploy create-deployment \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --application-name ${{ env.CODE_DEPLOY_APP_NAME }} \
        --deployment-group-name ${{ env.CODE_DEPLOY_GROUP_NAME }} \
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip

      

